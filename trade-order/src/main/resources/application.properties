#port
server.port=8082
### mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/trade_sys?serverTimezone=PST&useUnicode=true&characterEncoding=utf8&useSSL=true&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=12345678

## mybatis
mybatis.mapper-locations: classpath*:mappers/*.xml

mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

logging.level.com.boku.www.mapper=debug

## rabbitMQ
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


###consul
#application-name
spring.application.name=trade-order
# consul port
spring.cloud.consul.port=8500
#consul host
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.discovery.prefer-ip-address=true
#service-name
spring.cloud.consul.discovery.service-name=${spring.application.name}
#spring.main.allow-bean-definition-overriding=true



#m1  m2 database
spring.shardingsphere.datasource.names =m1,m2

#m1
spring.shardingsphere.datasource.m1.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/trade_sys_db1?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=true
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=12345678

#m2
spring.shardingsphere.datasource.m2.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/trade_sys_db2?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=true
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=12345678




#m1.order_info_1 m1.order_info_2 m2.order_info_1 m2.order_info_2
spring.shardingsphere.rules.sharding.tables.order_info.actual-data-nodes=m$->{1..2}.order_info_$->{1..2}

spring.shardingsphere.sharding.tables.order_info.key-generator.column=id
spring.shardingsphere.sharding.tables.order_info.key-generator.type=SNOWFLAKE

#sharding-column
spring.shardingsphere.sharding.tables.order_info.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.order_info.table-strategy.inline.algorithm-expression=order_info_$->{id % 2 +1}

#user_id
spring.shardingsphere.sharding.tables.order_info.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.order_info.database-strategy.inline.algorithm-expression=m$->{user_id % 2 +1}
spring.main.allow-bean-definition-overriding=true

#sql
spring.shardingsphere.props.sql.show=true

management.health.db.enabled=false
